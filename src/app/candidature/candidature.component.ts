import { Component, ElementRef, ViewChild } from '@angular/core';
import { trigger, transition, style, animate, keyframes } from '@angular/animations';



@Component({
  selector: 'app-candidature',
  templateUrl: './candidature.component.html',
  styleUrls: ['./candidature.component.css'] ,
  animations: [
    trigger('cardAnimation', [
      transition(':enter', [
        style({ opacity: 0, transform: 'translateY(20px)' }),
        animate('{{delay}}ms 50ms ease-out', 
          keyframes([
            style({ opacity: 1, transform: 'translateY(0)', offset: 1 })
          ])
        )
      ])
    ])
  ]
})
export class CandidatureComponent {
  @ViewChild('sidebar') sidebar!: ElementRef; // R√©f√©rence pour la sidebar
  @ViewChild('popup') popup!: ElementRef; // R√©f√©rence pour la popup
  
  // Liste des cartes que nous allons afficher avec l'animation
  cards = [
    { title: 'üìçContexte :', content: 'Le march√© de l‚Äôemploi √©volue rapidement, n√©cessitant des outils num√©riques pour connecter efficacement recruteurs et candidats. Une plateforme de recrutement doit offrir simplicit√©, interactivit√© et rapidit√© pour r√©pondre aux nouvelles attentes.' },
    { title: 'üìçImpact :', content: 'Une plateforme bien con√ßue permet de r√©duire le temps et les efforts pour trouver le bon profil, tout en am√©liorant la transparence et le suivi des candidatures. Elle offre une exp√©rience utilisateur engageante, renfor√ßant la confiance et l‚Äôengagement des utilisateurs.' },
    { title: 'üìçD√©fi :', content: 'Cr√©er une plateforme qui simplifie la gestion des candidatures, propose des outils intuitifs pour les recruteurs et int√®gre des fonctionnalit√©s interactives pour l‚Äôam√©lioration continue. Elle doit assurer une mise en relation rapide, pr√©cise et transparente entre recruteurs et talents.' },
  ];

  // Fonction pour ouvrir et fermer la sidebar
  toggleSidebar(action: string): void {
    if (action === 'open') {
      this.sidebar.nativeElement.classList.add('active');
    } else if (action === 'close') {
      this.sidebar.nativeElement.classList.remove('active');
    }
  }
  
  // Fonction pour ouvrir et fermer la popup
  togglePopup(): void {
    if (this.popup.nativeElement.classList.contains('active')) {
      this.popup.nativeElement.classList.remove('active');
    } else {
      this.popup.nativeElement.classList.add('active');
    }
  }
  
  onVideoEnd(): void {
    console.log('La vid√©o est termin√©e.');
  }
  
  
}
